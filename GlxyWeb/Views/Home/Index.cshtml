@model List<GlxyWeb.Models.AlarmModel>

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Liste Tablosu</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #4CAF50;
            color: white;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #ddd;
        }

        .active {
            background-color: green;
            color: white;
        }

        .inactive {
            background-color: red;
            color: white;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .pagination a {
                color: black;
                float: left;
                padding: 8px 16px;
                text-decoration: none;
                border: 1px solid #ddd;
                margin: 0 4px;
            }

                .pagination a.active {
                    background-color: #4CAF50;
                    color: white;
                    border: 1px solid #4CAF50;
                }
    </style>
</head>
<body>
    <h1>Alarm List</h1>
    <table>
        <tr>
            <th>Alarm Name</th>
            <th>Repeat</th>
            <th>Hour</th>
            <th>Message</th>
            <th>Status</th>
            <th></th>
        </tr>
        @foreach (var alarm in Model)
        {
            <tr>
                <td>@alarm.Alarm_name</td>
                <td>@alarm.Repeat</td>
                <td>@alarm.Hour</td>
                <td>@alarm.Message</td>
                <td style="@(alarm.Active == false ? "background-color: red;" : "")">@alarm.Active</td>
                <td>
                    @if (alarm.Active)
                    {
                        <button class="inactive" onclick="toggleStatus('@alarm.Alarm_name', false)">Passive</button>
                    }
                    else
                    {
                        <button class="active" onclick="toggleStatus('@alarm.Alarm_name', true)">Active</button>
                    }
                </td>
            </tr>
        }
    </table>

    <div class="pagination">
        <a href="#" class="previous">Previous</a>
        <div class="page-numbers"></div>
        <a href="#" class="next">Next</a>
    </div>

    <script>

          function toggleStatus(alarm_name,status) {
            fetch('/Home/Update?alarm_name=' + alarm_name + '&status=' + status, { method: 'POST' })
                .then(response => response.text())
                .then(data => {
                    if (data === 'Success') {
                        location.reload();
                    } else {
                        alert('Durum güncellenirken bir hata oluştu.');
                    }
                })
                .catch(error => {
                    console.error('Bir hata oluştu:', error);
                });
        }

        var tableRows = document.querySelectorAll('table tr');
        var totalPages = Math.ceil(tableRows.length / 10); // Number of rows to display per page
        var currentPage = 1;

        function showPage(page) {
            var startIndex = (page - 1) * 10;
            var endIndex = startIndex + 10;

            for (var i = 0; i < tableRows.length; i++) {
                if (i >= startIndex && i < endIndex) {
                    tableRows[i].style.display = 'table-row';
                } else {
                    tableRows[i].style.display = 'none';
                }
            }
        }

        function updatePagination() {
            var previousLink = document.querySelector('.pagination .previous');
            var nextLink = document.querySelector('.pagination .next');
            var pageNumbersContainer = document.querySelector('.pagination .page-numbers');

            previousLink.style.display = currentPage === 1 ? 'none' : 'inline';
            nextLink.style.display = currentPage === totalPages ? 'none' : 'inline';

            pageNumbersContainer.innerHTML = '';

            for (var i = 1; i <= totalPages; i++) {
                var pageNumber = document.createElement('a');
                pageNumber.href = '#';
                pageNumber.innerText = i;
                pageNumber.classList.add('page-number');
                if (i === currentPage) {
                    pageNumber.classList.add('active');
                }

                pageNumber.addEventListener('click', function () {
                    navigateToPage(parseInt(this.innerText));
                });

                pageNumbersContainer.appendChild(pageNumber);
            }
        }

        function navigateToPage(page) {
            if (page < 1 || page > totalPages) {
                return;
            }

            currentPage = page;
            showPage(currentPage);
            updatePagination();
        }

        function goToPreviousPage() {
            navigateToPage(currentPage - 1);
        }

        function goToNextPage() {
            navigateToPage(currentPage + 1);
        }

        var previousLink = document.querySelector('.pagination .previous');
        var nextLink = document.querySelector('.pagination .next');

        previousLink.addEventListener('click', goToPreviousPage);
        nextLink.addEventListener('click', goToNextPage);

        showPage(currentPage);
        updatePagination();
    </script>
</body>
</html>
